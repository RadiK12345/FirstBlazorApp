@page "/learnBlazor/bindprop"

<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3>
        <hr/>
        
        Input Price : <input type="number" @bind="@product.Price" @bind:event="oninput"/> <br/>
        Input Price : <input type="number" @bind-value="@product.Price" @bind-value:event="oninput"/> <br/>
        Product Properties 
        <select @bind="selectedProp">
            @foreach (var prop in product.ProductProps)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
    </div>
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3>
        <hr/>
        Name : @product.Name <br/>
        IsActive : @product.IsActive <br/>
        Price : @product.Price <hr/>
        This product is @(product.IsActive ? "Active" : "Inactive") <br/>
        
        Selected Property: @selectedProp;
        @if (!string.IsNullOrEmpty(selectedProp))
        {
            <p>Selected Value: @product.ProductProps.FirstOrDefault(x=>x.Key==selectedProp).Value;</p> 
        }
    </div>
</div>

<h3 style="color: forestgreen; font-weight: normal">Product Table</h3>
<table style="width: 100%">
    <tr style="border-bottom: 2px solid black;">
        <th style="font-weight: normal">Product Name</th>
        <th style="font-weight: normal">Price</th>
        <th style="font-weight: normal">Is Active</th>
    </tr>
    
    @foreach(var prod in productList)
    {
        <tr style="border-bottom: 1px solid gray;">
            <td><input type="text" @bind="prod.Name" @bind:event="oninput"/></td>
            <td><input type="text" @bind="prod.Price" @bind:event="oninput"/></td>
            <td><input type="checkbox" @bind="prod.IsActive"/></td>
            
            
        </tr>
    }
    
</table>

<div>
    <h3>Product Summary</h3>
    @foreach (var prod in productList)
    {
        <p>@prod.Name [@prod.Price] is @(prod.IsActive == true ? "Active" : "Inactive")</p>
    }
    
    
</div>

@code {
    private string selectedProp = "";
    
    Product product = new Product()
    {
        Id = 1,
        Name = "Product 1",
        IsActive = true,
        Price = 12,
        ProductProps = new List<ProductProp>()
        {
            new ProductProp { Id = 1, Key = "Color", Value = "Red" },
            new ProductProp { Id = 2, Key = "Size", Value = "20oz" },
            new ProductProp { Id = 3, Key = "Flavor", Value = "Rose" },
        }
    };

    List<Product> productList = new();

    protected override void OnInitialized()
    {
        productList.Add( new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 5.99,
            ProductProps = new List<ProductProp>()
            {
                new ProductProp { Id = 1, Key = "Color", Value = "Rose" },
                new ProductProp { Id = 2, Key = "Size", Value = "20oz" },
                new ProductProp { Id = 3, Key = "Flavor", Value = "Purple" }
            }
        });
        
        productList.Add( new()
        {
            Id = 2,
            Name = "Blossom lily",
            IsActive = true,
            Price = 10.59,
            ProductProps = new List<ProductProp>()
            {
                new ProductProp { Id = 1, Key = "Color", Value = "Lily" },
                new ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new ProductProp { Id = 3, Key = "Flavor", Value = "White" }
            }
        });
        
        productList.Add( new()
        {
            Id = 3,
            Name = "Red",
            IsActive = true,
            Price = 12.19,
            ProductProps = new List<ProductProp>()
            {
                new ProductProp { Id = 1, Key = "Color", Value = "Red" },
                new ProductProp { Id = 2, Key = "Size", Value = "15oz" },
                new ProductProp { Id = 3, Key = "Flavor", Value = "Blue" }
            }
        });
    }
}
